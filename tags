ABS	subsample.c	/^#define ABS(x)	((x < 0) ? (-x) : x)$/
ASCII_TOUPPER	opts.c	/^#define ASCII_TOUPPER(c) ((c>='a') && (c<='z')) ? /
AddBMotionBlock	block.c	/^AddBMotionBlock(block, prev, next, by, bx, mode, f/
AddBs	specifics.c	/^Block_Specifics *AddBs(c,bnum,rel,qs)$/
AddMotionBlock	block.c	/^AddMotionBlock(block, prev, by, bx, my, mx)$/
AddSlc	specifics.c	/^void AddSlc(c, snum, qs)$/
AllocDctBlocks	iframe.c	/^AllocDctBlocks()$/
AppendFile	combine.c	/^AppendFile(outputFile, inputFile)$/
BMotionSearch	bsearch.c	/^BMotionSearch(currentBlock, prev, next, by, bx, fm/
BMotionSearchCross2	bsearch.c	/^BMotionSearchCross2(currentBlock, prev, next, by, /
BMotionSearchExhaust	bsearch.c	/^BMotionSearchExhaust(currentBlock, prev, next, by,/
BMotionSearchNoInterp	bsearch.c	/^BMotionSearchNoInterp(currentBlock, prev, next, by/
BMotionSearchSimple	bsearch.c	/^BMotionSearchSimple(currentBlock, prev, next, by, /
BSearchName	bsearch.c	/^BSearchName()$/
Bitio_BytePad	bitio.c	/^Bitio_BytePad(bbPtr)$/
Bitio_Flush	bitio.c	/^Bitio_Flush(bbPtr)$/
Bitio_Free	bitio.c	/^Bitio_Free(bbPtr)$/
Bitio_New	bitio.c	/^Bitio_New(filePtr)$/
Bitio_Write	bitio.c	/^Bitio_Write(bbPtr, bits, nbits)$/
Bitio_WriteToSocket	bitio.c	/^Bitio_WriteToSocket(bbPtr, socket)$/
BlockComputeSNR	iframe.c	/^BlockComputeSNR(current, snr, psnr)$/
BlockToData	block.c	/^BlockToData(data, block, by, bx)$/
BlockifyFrame	block.c	/^BlockifyFrame(framePtr)$/
CalcDistortion	iframe.c	/^CalcDistortion(current, y, x)$/
CalcLambdas	opts.c	/^void CalcLambdas()$/
CalcRLEHuffLength	postdct.c	/^CalcRLEHuffLength(in)$/
CloseBitRateFile	mpeg.c	/^CloseBitRateFile()$/
CompileTests	main.c	/^CompileTests()$/
ComputeAndPrintPframeMAD	pframe.c	/^ComputeAndPrintPframeMAD(currentBlock, prev, by, b/
ComputeBDiffDCTs	bframe.c	/^ComputeBDiffDCTs(current, prev, next, by, bx, mode/
ComputeBMotionBlock	bframe.c	/^ComputeBMotionBlock(prev, next, by, bx, mode, fmy,/
ComputeBMotionLumBlock	bframe.c	/^ComputeBMotionLumBlock(prev, next, by, bx, mode, f/
ComputeBlockColorDiff	bframe.c	/^ComputeBlockColorDiff(current, motionBlock)$/
ComputeDHMSTime	mpeg.c	/^ComputeDHMSTime(someTime, timeText)$/
ComputeDiffDCTBlock	block.c	/^ComputeDiffDCTBlock(current, dest, motionBlock)$/
ComputeDiffDCTs	block.c	/^ComputeDiffDCTs(current, prev, by, bx, my, mx, pat/
ComputeFrameTable	frametype.c	/^ComputeFrameTable()$/
ComputeGOPFrames	mpeg.c	/^ComputeGOPFrames(whichGOP, firstFrame, lastFrame, /
ComputeHalfPixelData	pframe.c	/^ComputeHalfPixelData(frame)$/
ComputeMotionBlock	block.c	/^ComputeMotionBlock(prev, by, bx, my, mx, motionBlo/
ComputeMotionLumBlock	block.c	/^ComputeMotionLumBlock(prevFrame, by, bx, my, mx, m/
ComputeSubSampledMotionLumBlock	block.c	/^ComputeSubSampledMotionLumBlock(prevFrame, by, bx,/
ConnectToSocket	parallel.c	/^ConnectToSocket(machineName, portNum, hostEnt)$/
CreateListeningSocket	parallel.c	/^CreateListeningSocket(portNumber)$/
CvtType	specifics.c	/^#define CvtType(x) ReallyCvt(my_upper(x))$/
DESCALE	jrevdct.c	/^#define DESCALE(x,n)  RIGHT_SHIFT((x) + (ONE << ((/
DoBIntraCode	bframe.c	/^DoBIntraCode(current, prev, next, by, bx, mode, fm/
DoGamma	readframe.c	/^DoGamma(mf, w, h)$/
DoIntraCode	pframe.c	/^DoIntraCode(currentBlock, prev, by, bx, motionY, m/
DoKillDim	readframe.c	/^DoKillDim(mf, w, h)$/
Dump	bitio.c	/^Dump(bbPtr)$/
EncodeCDC	iframe.c	/^EncodeCDC(dc_term, pred_term, bb)$/
EncodeYDC	iframe.c	/^EncodeYDC(dc_term, pred_term, bb)$/
EndIOServer	parallel.c	/^EndIOServer()$/
EndString	specifics.c	/^#define EndString(lp)  ((*lp == '\\n') || (*lp == '/
EstimateSecondsPerBFrame	bframe.c	/^EstimateSecondsPerBFrame()$/
EstimateSecondsPerIFrame	iframe.c	/^EstimateSecondsPerIFrame()$/
EstimateSecondsPerPFrame	pframe.c	/^EstimateSecondsPerPFrame()$/
FIX	mfwddct.c	/^#define FIX(x)	((int32) ((x) * DCT_SCALE + 0.5))$/
FIXO	mfwddct.c	/^#define FIXO(x)  ((int32) ((x) * DCT_SCALE \/ OVERS/
FType_FutureRef	frametype.c	/^FType_FutureRef(currFrameNum)$/
FType_PastRef	frametype.c	/^FType_PastRef(currFrameNum)$/
FType_Type	mpeg.c	/^		  ((FType_Type(frameNum) != 'i') || (currGOP < g/
FindBestMatch	bsearch.c	/^FindBestMatch(block, currentBlock, prev, by, bx, m/
FindBestMatchExhaust	bsearch.c	/^FindBestMatchExhaust(block, currentBlock, prev, by/
FindBestMatchLogarithmic	bsearch.c	/^FindBestMatchLogarithmic(block, currentBlock, prev/
FindBestMatchSubSample	bsearch.c	/^FindBestMatchSubSample(block, currentBlock, prev, /
FindBestMatchTwoLevel	bsearch.c	/^FindBestMatchTwoLevel(block, currentBlock, prev, b/
Frame_AllocBlocks	frame.c	/^Frame_AllocBlocks(frame)$/
Frame_AllocDecoded	frame.c	/^Frame_AllocDecoded(frame, makeReference)$/
Frame_AllocHalf	frame.c	/^Frame_AllocHalf(frame)$/
Frame_AllocPPM	frame.c	/^Frame_AllocPPM(frame)$/
Frame_AllocYCC	frame.c	/^Frame_AllocYCC(frame)$/
Frame_Exit	frame.c	/^Frame_Exit()$/
Frame_Free	frame.c	/^Frame_Free(frame)$/
Frame_Init	frame.c	/^Frame_Init()$/
Frame_New	frame.c	/^Frame_New(id, type)$/
Frame_Resize	frame.c	/^Frame_Resize(omf,mf,insize_x,insize_y,outsize_x,ou/
FramesToMPEG	combine.c	/^FramesToMPEG(numFrames, outputFileName, outputFile/
FreeFrame	frame.c	/^FreeFrame(frame)$/
Fsize_Note	fsize.c	/^Fsize_Note(id, width, height)$/
Fsize_Reset	fsize.c	/^Fsize_Reset()$/
Fsize_Validate	fsize.c	/^Fsize_Validate(x, y)$/
GOPStoMPEG	combine.c	/^GOPStoMPEG(numGOPS, outputFileName, outputFilePtr)/
GenBFrame	bframe.c	/^GenBFrame(bb, curr, prev, next)$/
GenBlockPattern	mheaders.c	/^GenBlockPattern(bbPtr, mb_pattern)$/
GenIFrame	iframe.c	/^GenIFrame(bb, current)$/
GenMBAddrIncr	mheaders.c	/^GenMBAddrIncr(bbPtr, addr_incr)$/
GenMBEnd	mheaders.c	/^GenMBEnd(bbPtr)$/
GenMBType	mheaders.c	/^GenMBType(bbPtr, pict_code_type, mb_quant, motion_/
GenMPEGStream	mpeg.c	/^GenMPEGStream(whichGOP, frameStart, frameEnd, qtab/
GenMotionCode	mheaders.c	/^GenMotionCode(bbPtr, vector)$/
GenPFrame	pframe.c	/^GenPFrame(bb, current, prev)$/
GenPictHead	mheaders.c	/^GenPictHead(bbPtr, temp_ref, code_type, vbv_delay,/
GetAspectRatio	param.c	/^GetAspectRatio(p)$/
GetBQScale	bframe.c	/^GetBQScale()$/
GetFrameRate	param.c	/^GetFrameRate(p)$/
GetIQScale	iframe.c	/^GetIQScale()$/
GetNthInputFileName	param.c	/^GetNthInputFileName(fileName, n)$/
GetNumOfFrames	frame.c	/^GetNumOfFrames(numOfFrames)$/
GetPQScale	pframe.c	/^GetPQScale()$/
GetRemoteDecodedRefFrame	parallel.c	/^GetRemoteDecodedRefFrame(frame, frameNumber)$/
GetRemoteFrame	parallel.c	/^GetRemoteFrame(frame, frameNumber)$/
GetUnusedFrame	frame.c	/^GetUnusedFrame()$/
IncrementTCTime	mpeg.c	/^IncrementTCTime()$/
InputFileEntry	param.c	243
JM2JPEG	param.c	/^JM2JPEG()$/
JMovie2JPEG	jpeg.c	/^JMovie2JPEG(infilename,obase,start,end)$/
LumAddMotionError	block.c	/^LumAddMotionError(currentBlock, blockSoFar, prevFr/
LumBlockMAD	block.c	/^LumBlockMAD(currentBlock, motionBlock, bestSoFar)$/
LumMotionError	block.c	/^LumMotionError(currentBlock, prevFrame, by, bx, my/
LumMotionErrorA	subsample.c	/^LumMotionErrorA(currentBlock, prevFrame, by, bx, m/
LumMotionErrorB	subsample.c	/^LumMotionErrorB(currentBlock, prevFrame, by, bx, m/
LumMotionErrorC	subsample.c	/^LumMotionErrorC(currentBlock, prevFrame, by, bx, m/
LumMotionErrorD	subsample.c	/^LumMotionErrorD(currentBlock, prevFrame, by, bx, m/
LumMotionErrorSubSampled	block.c	/^LumMotionErrorSubSampled(currentBlock, prevFrame, /
MB_RateOut	rate.c	/^MB_RateOut(type)$/
MULTIPLY	jrevdct.c	/^#define MULTIPLY(var,const)  (((INT16) (var)) * ((/
MakeFslEntry	specifics.c	/^FrameSpecList *MakeFslEntry()$/
Mhead_GenGOPHeader	mheaders.c	/^Mhead_GenGOPHeader(bbPtr, drop_frame_flag, tc_hrs,/
Mhead_GenMBHeader	mheaders.c	/^Mhead_GenMBHeader(bbPtr, pict_code_type, addr_incr/
Mhead_GenPictureHeader	mheaders.c	/^Mhead_GenPictureHeader(bbPtr, frameType, pictCount/
Mhead_GenSequenceEnder	mheaders.c	/^Mhead_GenSequenceEnder(bbPtr)$/
Mhead_GenSequenceHeader	mheaders.c	/^Mhead_GenSequenceHeader(bbPtr, hsize, vsize, prati/
Mhead_GenSliceEnder	mheaders.c	/^Mhead_GenSliceEnder(bbPtr)$/
Mhead_GenSliceHeader	mheaders.c	/^Mhead_GenSliceHeader(bbPtr, verticalPos, qscale, e/
Mmain	main.c	/^main(argc, argv)$/
MotionSearchPreComputation	psearch.c	/^MotionSearchPreComputation(frame)$/
MotionSufficient	bframe.c	/^MotionSufficient(curr, currBlock, prev, next, by, /
Mpost_QuantZigBlock	postdct.c	/^Mpost_QuantZigBlock(in, out, qscale, iblock)$/
Mpost_RLEHuffIBlock	postdct.c	/^Mpost_RLEHuffIBlock(in, out)$/
Mpost_RLEHuffPBlock	postdct.c	/^Mpost_RLEHuffPBlock(in, out)$/
Mpost_UnQuantZigBlock	postdct.c	/^Mpost_UnQuantZigBlock(in, out, qscale, iblock)$/
Mpost_UnQuantZigBlockLaplace	opts.c	/^Mpost_UnQuantZigBlockLaplace(in, out, qscale, iblo/
NonLocalRefFrame	mpeg.c	/^NonLocalRefFrame(id)$/
NoteFrameDone	parallel.c	/^NoteFrameDone(frameStart, frameEnd)$/
NotifyDecodeServerReady	parallel.c	/^NotifyDecodeServerReady(id)$/
NotifyMasterDone	parallel.c	/^NotifyMasterDone(hostName, portNum, machineNumber,/
OVERSHIFT	mfwddct.c	/^#define OVERSHIFT(x)  ((x) <<= LG2_OVERSCALE)$/
OpenBitRateFile	mpeg.c	/^OpenBitRateFile()$/
PLocalSearch	psearch.c	/^PLocalSearch(currentBlock, prev, by, bx, motionY, /
PLogarithmicSearch	psearch.c	/^PLogarithmicSearch(currentBlock, prev, by, bx, mot/
PMotionSearch	psearch.c	/^PMotionSearch(currentBlock, prev, by, bx, motionY,/
PNMtoYUV	rgbtoycc.c	/^PNMtoYUV(frame)$/
PPMtoYUV	rgbtoycc.c	/^PPMtoYUV(frame)$/
PSearchName	psearch.c	/^PSearchName()$/
PSubSampleSearch	psearch.c	/^PSubSampleSearch(currentBlock, prev, by, bx, motio/
PTwoLevelSearch	psearch.c	/^PTwoLevelSearch(currentBlock, prev, by, bx, motion/
ParseTuneParam	opts.c	/^void ParseTuneParam(charPtr)$/
Parse_Specifics_File	specifics.c	/^void Parse_Specifics_File(fp)$/
Parse_Specifics_File_v1	specifics.c	/^void Parse_Specifics_File_v1(fp)$/
Parse_Specifics_File_v2	specifics.c	/^void Parse_Specifics_File_v2(fp)$/
PrintEndStats	mpeg.c	/^PrintEndStats(inputFrameBits, totalBits)$/
PrintItoIBitRate	iframe.c	/^PrintItoIBitRate(numBits, frameNum)$/
PrintStartStats	mpeg.c	/^PrintStartStats(firstFrame, lastFrame)$/
ProcessRefFrame	mpeg.c	/^ProcessRefFrame(frame, bb, lastFrame, outputFileNa/
ReadAYUV	readframe.c	/^ReadAYUV(mf, fpointer, width, height)$/
ReadDecodedRefFrame	mpeg.c	/^ReadDecodedRefFrame(frame, frameNumber)$/
ReadEYUV	readframe.c	/^ReadEYUV(mf, fpointer, width, height)$/
ReadFrame	readframe.c	/^ReadFrame(frame, fileName, conversion, addPath)$/
ReadIOConvert	readframe.c	/^ReadIOConvert(fileName)$/
ReadInputFileNames	param.c	/^ReadInputFileNames(fpointer, endInput)$/
ReadJPEG	jpeg.c	/^ReadJPEG(mf, fp)$/
ReadMachineNames	param.c	/^ReadMachineNames(fpointer)$/
ReadPNM	readframe.c	/^ReadPNM(fp, mf)$/
ReadPPM	readframe.c	/^ReadPPM(mf, fpointer)$/
ReadParamFile	param.c	/^ReadParamFile(fileName, function)$/
ReadSub4	readframe.c	/^ReadSub4(mf, fpointer, width, height)$/
ReadY	readframe.c	/^ReadY(mf, fpointer, width, height)$/
ReallyCvt	specifics.c	/^#define ReallyCvt(x) (x=='I' ? 1 : (x=='P')?2: ((x/
ResetBFrameStats	bframe.c	/^ResetBFrameStats()$/
ResetFrame	frame.c	/^ResetFrame(id, type, frame)$/
ResetIFrameStats	iframe.c	/^ResetIFrameStats()$/
ResetPFrameStats	pframe.c	/^ResetPFrameStats()$/
Resize_Array_Height	frame.c	/^static void $/
Resize_Array_Width	frame.c	/^static void $/
Resize_Height	frame.c	/^Resize_Height(omfrh,mfrh,in_x,in_y,out_y)$/
Resize_Width	frame.c	/^static void  $/
SIMPLE_ASCII_UPPER	frametype.c	/^#define SIMPLE_ASCII_UPPER(x)  (((x)>='a') ? ((x)-/
SafeRead	parallel.c	/^SafeRead(fd, buf, nbyte)$/
SafeWrite	parallel.c	/^SafeWrite(fd, buf, nbyte)$/
ScanNextString	readframe.c	/^ScanNextString(inputLine, string)$/
SendDecodedFrame	parallel.c	/^SendDecodedFrame(frame)$/
SendRemoteFrame	parallel.c	/^SendRemoteFrame(frameNumber, bb)$/
SeparateLine	readframe.c	/^SeparateLine(fpointer, lineptr, width)$/
SetBQScale	bframe.c	/^SetBQScale(qB)$/
SetBSearchAlg	bsearch.c	/^SetBSearchAlg(alg)$/
SetBitRateFileName	mpeg.c	/^SetBitRateFileName(fileName)$/
SetBlocksPerSlice	iframe.c	/^SetBlocksPerSlice()$/
SetFCode	iframe.c	/^SetFCode()$/
SetFCodeHelper	iframe.c	/^SetFCodeHelper(SR)$/
SetFileFormat	readframe.c	/^SetFileFormat(format)$/
SetFileType	readframe.c	/^SetFileType(conversion)$/
SetFramePattern	frametype.c	/^SetFramePattern(pattern)$/
SetFrameRate	mpeg.c	/^SetFrameRate()$/
SetGOPSize	mpeg.c	/^SetGOPSize(size)$/
SetGOPStartTime	mheaders.c	/^SetGOPStartTime(index)$/
SetIOConvert	parallel.c	/^SetIOConvert(separate)$/
SetIQScale	iframe.c	/^SetIQScale(qI)$/
SetPQScale	pframe.c	/^SetPQScale(qP)$/
SetPSearchAlg	psearch.c	/^SetPSearchAlg(alg)$/
SetParallelPerfect	parallel.c	/^SetParallelPerfect(val)$/
SetPixelSearch	psearch.c	/^SetPixelSearch(searchType)$/
SetReferenceFrameType	mpeg.c	/^SetReferenceFrameType(type)$/
SetRemoteShell	parallel.c	/^SetRemoteShell(shell)$/
SetResize	readframe.c	/^void	SetResize(set)$/
SetSearchRange	psearch.c	/^SetSearchRange(pixelsP,pixelsB)$/
SetSlicesPerFrame	iframe.c	/^SetSlicesPerFrame(number)$/
SetStatFileName	mpeg.c	/^SetStatFileName(fileName)$/
SetupCollectQuantStats	opts.c	/^void SetupCollectQuantStats(charPtr)$/
SetupKillDimAreas	opts.c	/^void SetupKillDimAreas(charPtr)$/
SetupLaplace	opts.c	/^void SetupLaplace()$/
SetupLocalDCT	opts.c	/^void SetupLocalDCT(charPtr)$/
SetupSquashSmall	opts.c	/^void SetupSquashSmall(charPtr)$/
SetupWriteDistortions	opts.c	/^SetupWriteDistortions(charPtr)$/
ShowBBMVHistogram	psearch.c	/^ShowBBMVHistogram(fpointer)$/
ShowBFMVHistogram	psearch.c	/^ShowBFMVHistogram(fpointer)$/
ShowBFrameSummary	bframe.c	/^ShowBFrameSummary(inputFrameBits, totalBits, fpoin/
ShowIFrameSummary	iframe.c	/^ShowIFrameSummary(inputFrameBits, totalBits, fpoin/
ShowPFrameSummary	pframe.c	/^ShowPFrameSummary(inputFrameBits, totalBits, fpoin/
ShowPMVHistogram	psearch.c	/^ShowPMVHistogram(fpointer)$/
ShowRemainingTime	mpeg.c	/^ShowRemainingTime()$/
SkipSpacesTabs	param.c	/^  SkipSpacesTabs(start)$/
SkipToSpace	specifics.c	/^#define SkipToSpace(lp) while ((*lp != ' ') && (*l/
SpecLookup	specifics.c	/^int SpecLookup(fn,typ,num,info,start_qs)$/
SpecTypeLookup	specifics.c	/^int SpecTypeLookup(fn)$/
Specifics_Init	specifics.c	/^void Specifics_Init()$/
StartCombineServer	parallel.c	/^StartCombineServer(numInputFiles, outputFileName, /
StartDecodeServer	parallel.c	/^StartDecodeServer(numInputFiles, decodeFileName, p/
StartIOServer	parallel.c	/^StartIOServer(numInputFiles, parallelHostName, por/
StartMasterServer	parallel.c	/^StartMasterServer(numInputFiles, paramFile, output/
TRUNCATE_UINT8	block.c	/^#define TRUNCATE_UINT8(x)	((x < 0) ? 0 : ((x > 255/
TransmitPortNum	parallel.c	/^TransmitPortNum(hostName, portNum, newPortNum)$/
Tune_Init	opts.c	/^void Tune_Init()$/
UNFIX	mfwddct.c	/^#define UNFIX(x)   RIGHT_SHIFT((x) + (ONE << (LG2_/
UNFIXH	mfwddct.c	/^#define UNFIXH(x)  RIGHT_SHIFT((x) + (ONE << LG2_D/
UNFIXO	mfwddct.c	/^#define UNFIXO(x)  RIGHT_SHIFT((x) + (ONE << (LG2_/
Usage	main.c	/^Usage()$/
ValidBMotion	bsearch.c	/^ValidBMotion(by, bx, mode, fmy, fmx, bmy, bmx)$/
WaitForDecodedFrame	parallel.c	/^WaitForDecodedFrame(id)$/
WaitForOutputFile	parallel.c	/^WaitForOutputFile(number)$/
WriteDecodedFrame	iframe.c	/^WriteDecodedFrame(frame)$/
ZeroMotionBetter	pframe.c	/^ZeroMotionBetter(currentBlock, prev, by, bx, my, m/
ZeroMotionSufficient	pframe.c	/^ZeroMotionSufficient(currentBlock, prev, by, bx)$/
checkBufferFullness	rate.c	/^void checkBufferFullness (oldQScale)$/
checkSpatialActivity	rate.c	/^void checkSpatialActivity(blk0, blk1, blk2, blk3)$/
cleanup_fork	parallel.c	/^void cleanup_fork( dummy )			\/* try to kill all ch/
determineMBCount	rate.c	/^determineMBCount ()$/
getBitRate	rate.c	/^int getBitRate ()$/
getBufferSize	rate.c	/^int getBufferSize ()$/
getRateMode	rate.c	/^int getRateMode()$/
if	mpeg.c	/^	if ( gopNum == whichGOP ) {$/
incMacroBlockBits	rate.c	/^void incMacroBlockBits(num)$/
incNumBlocks	rate.c	/^void incNumBlocks(num)$/
initGOPRateControl	rate.c	/^initGOPRateControl()$/
initRateControl	rate.c	/^initRateControl()$/
init_fdct	mfwddct.c	/^void init_fdct()$/
init_idctref	jrevdct.c	/^void init_idctref()$/
mp_fwd_dct_block2	mfwddct.c	/^mp_fwd_dct_block2(data, dest)$/
mp_fwd_dct_fast	mfwddct.c	/^mp_fwd_dct_fast(data2d, dest2d)$/
mpeg_jrevdct	jrevdct.c	/^mpeg_jrevdct(data)$/
mpeg_jrevdct_quick	jrevdct.c	/^mpeg_jrevdct_quick(data)$/
mse	opts.c	/^int mse(blk1, blk2)$/
my_upper	specifics.c	/^#define my_upper(c) (((c>='a') && (c<='z')) ? (c-'/
needQScaleChange	rate.c	/^int needQScaleChange(oldQScale, blk0, blk1, blk2, /
pbm_allocarray	libpnmrw.c	/^#define pbm_allocarray( cols, rows ) ((bit**) pm_a/
pbm_allocrow	libpnmrw.c	/^#define pbm_allocrow( cols ) ((bit*) pm_allocrow( /
pbm_freearray	libpnmrw.c	/^#define pbm_freearray( bits, rows ) pm_freearray( /
pbm_freerow	libpnmrw.c	/^#define pbm_freerow( bitrow ) pm_freerow( (char*) /
pbm_getbit	libpnmrw.c	/^pbm_getbit( file )$/
pbm_getc	libpnmrw.c	/^pbm_getc( file )$/
pbm_getint	libpnmrw.c	/^pbm_getint( file )$/
pbm_getrawbyte	libpnmrw.c	/^pbm_getrawbyte( file )$/
pbm_readmagicnumber	libpnmrw.c	/^pbm_readmagicnumber( file )$/
pbm_readpbminitrest	libpnmrw.c	/^pbm_readpbminitrest( file, colsP, rowsP )$/
pbm_readpbmrow	libpnmrw.c	/^pbm_readpbmrow( file, bitrow, cols, format )$/
pbm_writepbminit	libpnmrw.c	/^pbm_writepbminit( file, cols, rows, forceplain )$/
pbm_writepbmrow	libpnmrw.c	/^pbm_writepbmrow( file, bitrow, cols, forceplain )$/
pbm_writepbmrowplain	libpnmrw.c	/^pbm_writepbmrowplain( file, bitrow, cols )$/
pbm_writepbmrowraw	libpnmrw.c	/^pbm_writepbmrowraw( file, bitrow, cols )$/
pgm_allocarray	libpnmrw.c	/^#define pgm_allocarray( cols, rows ) ((gray**) pm_/
pgm_allocrow	libpnmrw.c	/^#define pgm_allocrow( cols ) ((gray*) pm_allocrow(/
pgm_freearray	libpnmrw.c	/^#define pgm_freearray( grays, rows ) pm_freearray(/
pgm_freerow	libpnmrw.c	/^#define pgm_freerow( grayrow ) pm_freerow( (char*)/
pgm_readpgminitrest	libpnmrw.c	/^pgm_readpgminitrest( file, colsP, rowsP, maxvalP )/
pgm_readpgmrow	libpnmrw.c	/^pgm_readpgmrow( FILE* file, gray* grayrow, int col/
pgm_writepgminit	libpnmrw.c	/^pgm_writepgminit( FILE* file, int cols, int rows, /
pgm_writepgmrow	libpnmrw.c	/^pgm_writepgmrow( FILE* file, gray* grayrow, int co/
pgm_writepgmrowplain	libpnmrw.c	/^pgm_writepgmrowplain( file, grayrow, cols, maxval /
pgm_writepgmrowraw	libpnmrw.c	/^pgm_writepgmrowraw( file, grayrow, cols, maxval )$/
pm_allocarray	libpnmrw.c	/^  pm_allocarray( cols, rows, size )$/
pm_allocrow	libpnmrw.c	/^  pm_allocrow( cols, size )$/
pm_closer	libpnmrw.c	/^pm_closer( f )$/
pm_closew	libpnmrw.c	/^pm_closew( f )$/
pm_error	libpnmrw.c	/^#define pm_error(x) exit(1)$/
pm_freearray	libpnmrw.c	/^pm_freearray( its, rows )$/
pm_freerow	libpnmrw.c	/^pm_freerow( itrow )$/
pm_openr	libpnmrw.c	/^  pm_openr( name )$/
pm_openw	libpnmrw.c	/^  pm_openw( name )$/
pm_perror	libpnmrw.c	/^pm_perror( reason )$/
pnm_backgroundxel	libpnmrw.c	/^pnm_backgroundxel( xel** xels, int cols, int rows,/
pnm_backgroundxelrow	libpnmrw.c	/^pnm_backgroundxelrow( xel* xelrow, int cols, xelva/
pnm_blackxel	libpnmrw.c	/^pnm_blackxel( xelval maxval, int format )$/
pnm_init2	libpnmrw.c	/^pnm_init2( pn )$/
pnm_invertxel	libpnmrw.c	/^pnm_invertxel( xel* xP, xelval maxval, int format /
pnm_promoteformat	libpnmrw.c	/^pnm_promoteformat( xel** xels, int cols, int rows,/
pnm_promoteformatrow	libpnmrw.c	/^pnm_promoteformatrow( xel* xelrow, int cols, xelva/
pnm_readpnm	libpnmrw.c	/^  pnm_readpnm( file, colsP, rowsP, maxvalP, format/
pnm_readpnminit	libpnmrw.c	/^pnm_readpnminit( file, colsP, rowsP, maxvalP, form/
pnm_readpnmrow	libpnmrw.c	/^pnm_readpnmrow( FILE* file, xel* xelrow, int cols,/
pnm_whitexel	libpnmrw.c	/^pnm_whitexel( xelval maxval, int format )$/
pnm_writepnm	libpnmrw.c	/^pnm_writepnm( FILE* file, xel** xels, int cols, in/
pnm_writepnminit	libpnmrw.c	/^pnm_writepnminit( FILE* file, int cols, int rows, /
pnm_writepnmrow	libpnmrw.c	/^pnm_writepnmrow( FILE* file, xel* xelrow, int cols/
ppm_addtocolorhash	libpnmrw.c	/^ppm_addtocolorhash( cht, colorP, value )$/
ppm_addtocolorhist	libpnmrw.c	/^ppm_addtocolorhist( chv, colorsP, maxcolors, color/
ppm_allocarray	libpnmrw.c	/^#define ppm_allocarray( cols, rows ) ((pixel**) pm/
ppm_alloccolorhash	libpnmrw.c	/^ppm_alloccolorhash( )$/
ppm_allocrow	libpnmrw.c	/^#define ppm_allocrow( cols ) ((pixel*) pm_allocrow/
ppm_colorhashtocolorhist	libpnmrw.c	/^ppm_colorhashtocolorhist( cht, maxcolors )$/
ppm_colorhisttocolorhash	libpnmrw.c	/^ppm_colorhisttocolorhash( chv, colors )$/
ppm_computecolorhash	libpnmrw.c	/^ppm_computecolorhash( pixels, cols, rows, maxcolor/
ppm_computecolorhist	libpnmrw.c	/^ppm_computecolorhist( pixels, cols, rows, maxcolor/
ppm_freearray	libpnmrw.c	/^#define ppm_freearray( pixels, rows ) pm_freearray/
ppm_freecolorhash	libpnmrw.c	/^ppm_freecolorhash( cht )$/
ppm_freecolorhist	libpnmrw.c	/^ppm_freecolorhist( chv )$/
ppm_freerow	libpnmrw.c	/^#define ppm_freerow( pixelrow ) pm_freerow( (char*/
ppm_hashpixel	libpnmrw.c	/^#define ppm_hashpixel(p) ( ( ( (long) PPM_GETR(p) /
ppm_lookupcolor	libpnmrw.c	/^ppm_lookupcolor( cht, colorP )$/
ppm_readppminitrest	libpnmrw.c	/^ppm_readppminitrest( file, colsP, rowsP, maxvalP )/
ppm_readppmrow	libpnmrw.c	/^ppm_readppmrow( FILE* file, pixel* pixelrow, int c/
ppm_writeppminit	libpnmrw.c	/^ppm_writeppminit( FILE* file, int cols, int rows, /
ppm_writeppmrow	libpnmrw.c	/^ppm_writeppmrow( FILE* file, pixel* pixelrow, int /
ppm_writeppmrowplain	libpnmrw.c	/^ppm_writeppmrowplain( file, pixelrow, cols, maxval/
ppm_writeppmrowraw	libpnmrw.c	/^ppm_writeppmrowraw( file, pixelrow, cols, maxval )/
putus	libpnmrw.c	/^putus( n, file )$/
reference_fwd_dct	mfwddct.c	/^void reference_fwd_dct(block, dest)$/
reference_rev_dct	jrevdct.c	/^void reference_rev_dct(block)$/
rindex	libpnmrw.c	/^#define rindex(s,c) strrchr(s,c)$/
safe_fork	parallel.c	/^static int safe_fork(command)		\/* fork child proce/
safe_fread	readframe.c	/^#define safe_fread(ptr,sz,len,fileptr)            /
setBitRate	rate.c	/^void setBitRate (charPtr)$/
setBufferSize	rate.c	/^void setBufferSize (charPtr)$/
targetRateControl	rate.c	/^targetRateControl(frame)$/
time_elapsed	iframe.c	/^int32 time_elapsed()$/
updateRateControl	rate.c	/^updateRateControl(type)$/
updateVBVBuffer	rate.c	/^void updateVBVBuffer (frameBits)$/
